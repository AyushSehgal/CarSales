{"version":3,"sources":["../../src/rules/requireParamName.js"],"names":["report","utils","targetTagName","getPreferredTagName","forEachTag","jsdocParameter","tag","name","type","meta"],"mappings":";;;;;;;AAAA;;;;eAEe,2BAAa,CAAC;AAC3BA,EAAAA,MAD2B;AAE3BC,EAAAA;AAF2B,CAAD,KAGtB;AACJ,QAAMC,aAAa,GAAGD,KAAK,CAACE,mBAAN,CAA0B,OAA1B,CAAtB;AAEAF,EAAAA,KAAK,CAACG,UAAN,CAAiBF,aAAjB,EAAiCG,cAAD,IAAoB;AAClD,QAAIA,cAAc,CAACC,GAAf,IAAsBD,cAAc,CAACE,IAAf,KAAwB,EAAlD,EAAsD;AACpDP,MAAAA,MAAM,CAAC,+CAA+CK,cAAc,CAACG,IAAf,KAAwB,EAAxB,GAA6B,MAA7B,GAAsC,KAArF,IAA8F,GAA/F,EAAoG,IAApG,EAA0GH,cAA1G,CAAN;AACD;AACF,GAJD;AAKD,CAXc,EAWZ;AACDI,EAAAA,IAAI,EAAE;AACJD,IAAAA,IAAI,EAAE;AADF;AADL,CAXY,C","sourcesContent":["import iterateJsdoc from '../iterateJsdoc';\n\nexport default iterateJsdoc(({\n  report,\n  utils\n}) => {\n  const targetTagName = utils.getPreferredTagName('param');\n\n  utils.forEachTag(targetTagName, (jsdocParameter) => {\n    if (jsdocParameter.tag && jsdocParameter.name === '') {\n      report('There must be an identifier after @param ' + (jsdocParameter.type === '' ? 'type' : 'tag') + '.', null, jsdocParameter);\n    }\n  });\n}, {\n  meta: {\n    type: 'suggestion'\n  }\n});\n"],"file":"requireParamName.js"}