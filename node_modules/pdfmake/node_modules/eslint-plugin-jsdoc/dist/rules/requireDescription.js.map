{"version":3,"sources":["../../src/rules/requireDescription.js"],"names":["jsdoc","report","utils","avoidDocs","targetTagName","getPreferredTagName","functionExamples","_","filter","tags","tag","length","forEach","example","exampleContent","compact","name","description","trim","split","returns","context","defaultContexts","options","noDefaults","contexts","ctxts","Set","schema","additionalProperties","properties","oneOf","items","type"],"mappings":";;;;;;;AAAA;;AACA;;;;eAEe,2BAAa,CAAC;AAC3BA,EAAAA,KAD2B;AAE3BC,EAAAA,MAF2B;AAG3BC,EAAAA;AAH2B,CAAD,KAItB;AACJ,MAAIA,KAAK,CAACC,SAAN,EAAJ,EAAuB;AACrB;AACD;;AAED,QAAMC,aAAa,GAAGF,KAAK,CAACG,mBAAN,CAA0B,aAA1B,CAAtB;;AAEA,QAAMC,gBAAgB,GAAGC,gBAAEC,MAAF,CAASR,KAAK,CAACS,IAAf,EAAqB;AAC5CC,IAAAA,GAAG,EAAEN;AADuC,GAArB,CAAzB;;AAIA,MAAI,CAACE,gBAAgB,CAACK,MAAtB,EAA8B;AAC5BV,IAAAA,MAAM,CAAC,oBAAoBG,aAApB,GAAoC,eAArC,CAAN;AAEA;AACD;;AAEDE,EAAAA,gBAAgB,CAACM,OAAjB,CAA0BC,OAAD,IAAa;AACpC,UAAMC,cAAc,GAAGP,gBAAEQ,OAAF,CAAU,CAACF,OAAO,CAACG,IAAR,GAAe,GAAf,GAAqBH,OAAO,CAACI,WAA9B,EAA2CC,IAA3C,GAAkDC,KAAlD,CAAwD,IAAxD,CAAV,CAAvB;;AAEA,QAAI,CAACL,cAAc,CAACH,MAApB,EAA4B;AAC1BV,MAAAA,MAAM,CAAC,oBAAoBG,aAApB,GAAoC,eAArC,CAAN;AACD;AACF,GAND;AAOD,CA5Bc,EA4BZ;AACDgB,EAAAA,OAAO,CAAEC,OAAF,EAAW;AAChB,UAAMC,eAAe,GAAG,CACtB,yBADsB,EAEtB,qBAFsB,EAGtB,oBAHsB,CAAxB;;AADgB,iBAUZD,OAAO,CAACE,OAAR,CAAgB,CAAhB,KAAsB,EAVV;AAAA,UAQdC,UARc,QAQdA,UARc;AAAA,+BASdC,QATc;AAAA,UASJC,KATI,8BASI,EATJ;;AAYhB,UAAMD,QAAQ,GAAG,OAAOC,KAAP,KAAiB,QAAjB,GAA4B,CAACA,KAAD,CAA5B,GAAsCA,KAAvD;AAEA,WAAOF,UAAU,GACfC,QADe,GAEf,CAAC,GAAG,IAAIE,GAAJ,CAAQ,CAAC,GAAGL,eAAJ,EAAqB,GAAGG,QAAxB,CAAR,CAAJ,CAFF;AAGD,GAlBA;;AAmBDG,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,oBAAoB,EAAE,KADxB;AAEEC,IAAAA,UAAU,EAAE;AACVL,MAAAA,QAAQ,EAAE;AACRM,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAE;AADD,WADT;AAIEA,UAAAA,IAAI,EAAE;AAJR,SADK,EAOL;AACEA,UAAAA,IAAI,EAAE;AADR,SAPK;AADC,OADA;AAcVT,MAAAA,UAAU,EAAE;AACVS,QAAAA,IAAI,EAAE;AADI;AAdF,KAFd;AAoBEA,IAAAA,IAAI,EAAE;AApBR,GADM,CAnBP;AA2CDA,EAAAA,IAAI,EAAE;AA3CL,CA5BY,C","sourcesContent":["import _ from 'lodash';\nimport iterateJsdoc from '../iterateJsdoc';\n\nexport default iterateJsdoc(({\n  jsdoc,\n  report,\n  utils\n}) => {\n  if (utils.avoidDocs()) {\n    return;\n  }\n\n  const targetTagName = utils.getPreferredTagName('description');\n\n  const functionExamples = _.filter(jsdoc.tags, {\n    tag: targetTagName\n  });\n\n  if (!functionExamples.length) {\n    report('Missing JSDoc @' + targetTagName + ' declaration.');\n\n    return;\n  }\n\n  functionExamples.forEach((example) => {\n    const exampleContent = _.compact((example.name + ' ' + example.description).trim().split('\\n'));\n\n    if (!exampleContent.length) {\n      report('Missing JSDoc @' + targetTagName + ' description.');\n    }\n  });\n}, {\n  returns (context) {\n    const defaultContexts = [\n      'ArrowFunctionExpression',\n      'FunctionDeclaration',\n      'FunctionExpression'\n    ];\n\n    const {\n      noDefaults,\n      contexts: ctxts = []\n    } = context.options[0] || {};\n\n    const contexts = typeof ctxts === 'string' ? [ctxts] : ctxts;\n\n    return noDefaults ?\n      contexts :\n      [...new Set([...defaultContexts, ...contexts])];\n  },\n  schema: [\n    {\n      additionalProperties: false,\n      properties: {\n        contexts: {\n          oneOf: [\n            {\n              items: {\n                type: 'string'\n              },\n              type: 'array'\n            },\n            {\n              type: 'string'\n            }\n          ]\n        },\n        noDefaults: {\n          type: 'boolean'\n        }\n      },\n      type: 'object'\n    }\n  ],\n  type: 'suggestion'\n});\n"],"file":"requireDescription.js"}