{"version":3,"sources":["../../src/rules/checkTagNames.js"],"names":["sourceCode","jsdoc","report","utils","jsdocNode","tags","forEach","jsdocTag","isValidTag","tag","preferredTagName","getPreferredTagName","fixer","replacement","getText","replace","replaceText","meta","fixable","type"],"mappings":";;;;;;;AAAA;;;;eAEe,2BAAa,CAAC;AAC3BA,EAAAA,UAD2B;AAE3BC,EAAAA,KAF2B;AAG3BC,EAAAA,MAH2B;AAI3BC,EAAAA,KAJ2B;AAK3BC,EAAAA;AAL2B,CAAD,KAMtB;AACJ,MAAI,CAACH,KAAK,CAACI,IAAX,EAAiB;AACf;AACD;;AACDJ,EAAAA,KAAK,CAACI,IAAN,CAAWC,OAAX,CAAoBC,QAAD,IAAc;AAC/B,QAAIJ,KAAK,CAACK,UAAN,CAAiBD,QAAQ,CAACE,GAA1B,CAAJ,EAAoC;AAClC,YAAMC,gBAAgB,GAAGP,KAAK,CAACQ,mBAAN,CAA0BJ,QAAQ,CAACE,GAAnC,CAAzB;;AAEA,UAAIC,gBAAgB,KAAKH,QAAQ,CAACE,GAAlC,EAAuC;AACrCP,QAAAA,MAAM,CAAC,8CAA8CK,QAAQ,CAACE,GAAvD,GAA6D,oBAA7D,GAAoFC,gBAApF,GAAuG,IAAxG,EAA+GE,KAAD,IAAW;AAC7H,gBAAMC,WAAW,GAAGb,UAAU,CAACc,OAAX,CAAmBV,SAAnB,EAA8BW,OAA9B,CAAsC,MAAMR,QAAQ,CAACE,GAArD,EAA0D,MAAMC,gBAAhE,CAApB;AAEA,iBAAOE,KAAK,CAACI,WAAN,CAAkBZ,SAAlB,EAA6BS,WAA7B,CAAP;AACD,SAJK,EAIHN,QAJG,CAAN;AAKD;AACF,KAVD,MAUO;AACLL,MAAAA,MAAM,CAAC,6BAA6BK,QAAQ,CAACE,GAAtC,GAA4C,IAA7C,EAAmD,IAAnD,EAAyDF,QAAzD,CAAN;AACD;AACF,GAdD;AAeD,CAzBc,EAyBZ;AACDU,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,IAAI,EAAE;AAFF;AADL,CAzBY,C","sourcesContent":["import iterateJsdoc from '../iterateJsdoc';\n\nexport default iterateJsdoc(({\n  sourceCode,\n  jsdoc,\n  report,\n  utils,\n  jsdocNode\n}) => {\n  if (!jsdoc.tags) {\n    return;\n  }\n  jsdoc.tags.forEach((jsdocTag) => {\n    if (utils.isValidTag(jsdocTag.tag)) {\n      const preferredTagName = utils.getPreferredTagName(jsdocTag.tag);\n\n      if (preferredTagName !== jsdocTag.tag) {\n        report('Invalid JSDoc tag (preference). Replace \"' + jsdocTag.tag + '\" JSDoc tag with \"' + preferredTagName + '\".', (fixer) => {\n          const replacement = sourceCode.getText(jsdocNode).replace('@' + jsdocTag.tag, '@' + preferredTagName);\n\n          return fixer.replaceText(jsdocNode, replacement);\n        }, jsdocTag);\n      }\n    } else {\n      report('Invalid JSDoc tag name \"' + jsdocTag.tag + '\".', null, jsdocTag);\n    }\n  });\n}, {\n  meta: {\n    fixable: 'code',\n    type: 'suggestion'\n  }\n});\n"],"file":"checkTagNames.js"}